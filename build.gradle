plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'war'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
		url "http://159.89.210.222:8085/repository/maven-public/"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 	group:'org.apache.commons', name:'commons-lang3', version:'3.10'
	implementation  group: 'org.apache.poi', name: 'poi', version: '4.1.2'
	implementation  group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

	implementation  group: 'org.springframework', name: 'spring-context-support', version: '5.2.6.RELEASE'

	// test
	testCompileOnly group: 'org.projectlombok', name: 'lombok',version: '1.18.12'
	testAnnotationProcessor group: 'org.projectlombok', name: 'lombok',version: '1.18.12'



}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

task reload(type: Copy) {
	from 'src/main/resources'
	into 'build/resources/main'
	include 'static/**'
	include 'templates/**'
	include 'custom/**'
}

